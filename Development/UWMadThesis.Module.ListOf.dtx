%<*UserGuide>
%
%</UserGuide>
%
%
%
%
%
%
%<*Documentation>
%<<Verbatim
%   \iffalse
%<*Code>
%   \fi
%
%
%
%    \begin{macrocode}
\UWMad_Hash_Define:n {__ListOfHash-AdderCode}
\UWMad_Hash_Define:n {__ListOfHash-AdderCount}

\DeclareDocumentCommand \DefineListOfAdder { m m +m } {
    \UWMad_Queue_Define:n{__ListOfQueue-Entries-#1}
    \UWMad_Hash_Set:nnn{__ListOfHash-AdderCount}{#1}{#2}
    \UWMad_Hash_Set:nnn{__ListOfHash-AdderCode} {#1}{
        \UWMad_Queue_Push{__ListOfQueue-Entries-#1}{
            #3
        }
    }
    \UWMad_Boolean_DefineGlobalSetTrue:n {__ListOf-AdderDefined-#1}
}
%
%
%
%
\DeclareDocumentEnvironment {ListOfAnything} { m } {
%
    \tl_new:c {l__UWMad_ListOf#1_EnvironmentSection_tl}
    \tl_new:c {l__UWMad_ListOf#1_GroupSection_tl}
    \tl_new:c {l__UWMad_ListOf#1_SubgroupSection_tl}
%
%
    \cs_generate_variant:Nn \int_set:Nn {Nf}
    \cs_new:Nn \UWMad_RepeatString:nn {
        \int_set:Nf \l_tmpa_int {
            \UWMad_Hash_Set:nnn{__ListOfHash-AdderCount}{#1}
        }
        \int_step_inline:nnnn {1}{1}{\l_tmpa_int}{n}
    }
%
    \cs_generate_variant:Nn \cs_set:Nn {cf}
    \DeclareExpandableDocumentCommand \Add { } {
        \exp_args:cc
            {__ScratchAdd:\UWMad_RepeatString:nn{}{n}}
            {\UWMad_Hash_Get:nn {__ListOfAdders}{#1}}
         \cs_set_eq:Nc \__ScratchAdd {
            __ScratchAdd:\UWMad_RepeatString:nn{}{n}
        }
        \__ScratchAdd
    }
%
%
%
}{
    \UWMad_Queue_Pop:n {__ListOfQueue-Entries-#1}
}
%    \end{macrocode}
%
%
%
%   \iffalse
%</Code>
%   \fi
%Verbatim
%</Documentation>